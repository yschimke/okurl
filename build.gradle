buildscript {
    ext.kotlin_version = '1.2.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'net.nemerosa.versioning' version '2.6.1'
    id "org.jetbrains.kotlin.jvm" version "1.2.10"
    id 'io.codearte.nexus-staging' version '0.11.0'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'distribution'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'com.baulsupp'

versioning {
    releaseMode = project.hasProperty('releaseMode') ? project.property('releaseMode') : 'snapshot'
}

version = versioning.info.display

description = """OkHttp Social Authentication"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes("Implementation-Title": "OkSocial", "Implementation-Version": version)
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

distTar {
    compression = Compression.GZIP
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar, jar
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile("org.jetbrains.kotlin:kotlin-script-util:$kotlin_version") {
        exclude(module: 'kotlin-compiler')
    }
    compile "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlin_version"

    compile('com.baulsupp:oksocial-output:1.1.0')
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.3'
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2")
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.3'
    compile('com.twitter:joauth:6.0.2') {
        exclude(module: 'guava')
    }
    compile('com.github.mrmike:ok2curl:0.3.2') {
        exclude(module: 'okhttp')
    }
    compile 'javax.activation:activation:1.1.1'
    compile 'commons-cli:commons-cli:1.4'
    compile 'commons-lang:commons-lang:2.6'
    compile 'commons-io:commons-io:2.5'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:slf4j-jcl:1.7.25'
    compile 'org.zeroturnaround:zt-exec:1.10'
    compile 'com.google.guava:guava:23.0'
    compile 'com.jakewharton.byteunits:byteunits:0.9.1'
    compile 'io.netty:netty-all:4.1.19.Final'
    compile 'io.netty:netty-resolver-dns:4.1.19.Final'
    compile 'io.airlift:airline:0.8'
    compile files('external/osxkeychain.jar')
    compile 'io.zipkin.reporter:zipkin-sender-okhttp3:1.0.2'
    compile 'io.zipkin.brave:brave-okhttp:4.6.0'
    compile 'io.zipkin.brave:brave-instrumentation-okhttp3:4.6.0'
    compile 'io.zipkin.brave:brave:4.6.0'
    compile 'com.spotify:completable-futures:0.3.2'
    compile 'com.squareup.moshi:moshi:1.5.0'
    compile 'com.squareup.moshi:moshi-kotlin:1.5.0'
    compile 'com.squareup.moshi:moshi-adapters:1.5.0'
    compile 'org.brotli:dec:0.1.2'

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testCompile 'com.squareup.okhttp3:okhttp-testing-support:3.9.1'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.9.1'

    runtime 'org.mortbay.jetty.alpn:alpn-boot:8.1.11.v20170118'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

distributions {
    main {
        contents {
            from("${rootProject.projectDir}") {
                include "README.md", "LICENSE"
            }
            from("${rootProject.projectDir}/src/main/scripts") {
                fileMode 0755
                into "bin"
            }
            from("${rootProject.projectDir}/certificates") {
                into "certificates"
            }
            from("${rootProject.projectDir}/commands") {
                fileMode 0755
                into "bin"
            }
            from("${rootProject.projectDir}/bash") {
                into "bash"
            }
            from("${rootProject.projectDir}/src/main/resources") {
                into "scripts"
                include "oksocial.js"
            }
            into('lib') {
                from jar
                from(project.configurations.runtime).exclude("*alpn-boot*")
            }
            into('alpn') {
                from(project.configurations.runtime).include("*alpn-boot*")
            }
        }
    }
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

//packaging tests
task packageTests(type: Jar) {
    from sourceSets.test.output
    classifier = 'tests'
}

artifacts.archives packageTests

kotlin {
    experimental {
        coroutines "enable"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

if (project.hasProperty('ossrhUser')) {
    signing {
        sign configurations.archives
    }

    nexusStaging {
        username = ossrhUser
        password = ossrhPassword
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUser, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUser, password: ossrhPassword)
                }

                pom.project {
                    name project.name
                    group 'com.baulsupp'
                    description "Command Line Output Library"
                    url "https://github.com/yschimke/oksocial"

                    scm {
                        connection 'scm:git:https://github.com/yschimke/oksocial.git'
                        developerConnection 'scm:git:git@github.com:yschimke/oksocial.git'
                        url 'https://github.com/yschimke/oksocial.git'
                    }

                    licenses {
                        license {
                            name 'Apache License'
                            url 'http://opensource.org/licenses/apache-2.0'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id = 'yschimke'
                            name = 'Yuri Schimke'
                            email = 'yuri@schimke.ee'
                        }
                    }

                    packaging 'jar'
                }
            }
        }
    }
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = selection.candidate.group == "io.netty" && selection.candidate.version ==~ /5\..*/
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
