buildscript {
  ext.kotlin_version = '1.3-M2'
  ext.jackson_version = '2.9.6'
  ext.okhttp_version = '3.11.0'
  repositories {
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id "com.gradle.build-scan" version "1.15.1"
  id 'com.github.ben-manes.versions' version '0.20.0'
  id 'net.nemerosa.versioning' version '2.7.1'
  id 'io.codearte.nexus-staging' version '0.11.0'
//  id 'org.jmailen.kotlinter' version '1.16.0'
  id 'com.github.johnrengelman.shadow' version '2.0.4'
}

buildScan { licenseAgreementUrl = 'https://gradle.com/terms-of-service'; licenseAgree = 'yes' }

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'distribution'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'com.baulsupp'

versioning {
  releaseMode = project.hasProperty('releaseMode') ? project.property('releaseMode') : 'snapshot'
}

version = versioning.info.display

description = """OkHttp Social Authentication"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

jar {
  manifest {
    attributes("Implementation-Title": "OkSocial", "Implementation-Version": version)
  }
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
  kotlinOptions.apiVersion = "1.3"
  kotlinOptions.languageVersion = "1.3"
}

compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
  kotlinOptions.apiVersion = "1.3"
  kotlinOptions.languageVersion = "1.3"
}

distTar {
  compression = Compression.GZIP
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar, jar
}

repositories {
  mavenLocal()
  maven { url 'https://repo.spring.io/milestone' }
  maven { url 'https://oss.jfrog.org/libs-snapshot' }
  maven { url 'https://dl.bintray.com/reactivesocket/RSocket' }
  maven { url "https://jitpack.io" }
  maven { url "https://oss.sonatype.org/content/repositories/releases" }
  maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
  mavenCentral()
  jcenter()
}

dependencies {
  implementation "com.baulsupp:oksocial-output:4.17.0"
  implementation 'com.baulsupp:okhttp-digest:0.2.0'
  implementation "com.squareup.okio:okio:2.0.0"
  implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
  implementation "com.squareup.okhttp3:okhttp-dnsoverhttps:$okhttp_version"
  implementation "com.squareup.okhttp3:okhttp-sse:$okhttp_version"
  implementation "com.squareup.okhttp3:okhttp-tls:$okhttp_version"
  implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
  implementation "com.squareup.okhttp3.sample:unixdomainsockets:$okhttp_version"
  implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jackson_version"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
  implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
  implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:$jackson_version"
  implementation 'com.github.jnr:jnr-unixsocket:0.19'
  implementation "com.github.markusbernhardt:proxy-vole:1.0.5"
  implementation "com.github.mrmike:ok2curl:0.4.5"
  implementation "com.jakewharton.byteunits:byteunits:0.9.1"
  implementation "com.squareup.moshi:moshi-adapters:1.6.0"
  implementation "com.squareup.moshi:moshi-kotlin:1.6.0"
  implementation "com.squareup.moshi:moshi:1.6.0"
  implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"
  implementation "com.squareup.okhttp3:okhttp:3.10.0"
  implementation "commons-io:commons-io:2.6"
  implementation "com.github.rvesse:airline:2.5.0"
  implementation "io.netty:netty-resolver-dns:4.1.29.Final"
  implementation "io.zipkin.brave:brave-instrumentation-okhttp3:5.2.0"
  implementation "io.zipkin.brave:brave-okhttp:4.13.5"
  implementation "io.zipkin.brave:brave:5.2.0"
  implementation "io.zipkin.reporter2:zipkin-sender-okhttp3:2.7.7"
  implementation "io.zipkin.java:zipkin:2.10.1"
  implementation "javax.activation:activation:1.1.1"
  implementation "org.apache.commons:commons-lang3:3.8"
  implementation "org.brotli:dec:0.1.2"
  implementation "org.conscrypt:conscrypt-openjdk-uber:1.2.0"
  implementation "org.fusesource.jansi:jansi:1.17.1"
  implementation "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlin_version"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  implementation("org.jetbrains.kotlin:kotlin-script-util:$kotlin_version") {
    exclude(module: 'kotlin-compiler')
  }
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.25.1-eap13"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:0.25.1-eap13"
  implementation "org.slf4j:slf4j-jdk14:1.8.0-beta2"
  implementation "org.zeroturnaround:zt-exec:1.10"
  implementation "pt.davidafsilva.apple:jkeychain:1.0.0"

  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
  testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
  testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

  testImplementation "com.squareup.okhttp3:okhttp-testing-support:$okhttp_version"
  testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
}

distributions {
  main {
    contents {
      from("${rootProject.projectDir}") {
        include "README.md", "LICENSE"
      }
      from("${rootProject.projectDir}/src/main/scripts") {
        fileMode 0755
        into "bin"
      }
      from("${rootProject.projectDir}/certificates") {
        into "certificates"
      }
      from("${rootProject.projectDir}/src/test/kotlin/commands") {
        fileMode 0755
        exclude "local"
        into "bin"
      }
      from("${rootProject.projectDir}/bash") {
        into "bash"
      }
      from("${rootProject.projectDir}/zsh") {
        into "zsh"
      }
      from("${rootProject.projectDir}/src/main/resources") {
        into "scripts"
      }
      into('lib') {
        from jar
      }
      into('lib') {
        from configurations.runtimeClasspath
      }
    }
  }
}

compileTestJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  options.compilerArgs += '-parameters'
}

//packaging tests
task packageTests(type: Jar) {
  from sourceSets.test.output
  classifier = 'tests'
}

artifacts.archives packageTests

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact sourceJar {
        classifier "sources"
      }
    }
  }
}

if (project.hasProperty('ossrhUser')) {
  signing {
    sign configurations.archives
  }

  nexusStaging {
    username = ossrhUser
    password = ossrhPassword
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: ossrhUser, password: ossrhPassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: ossrhUser, password: ossrhPassword)
        }

        pom.project {
          name project.name
          group 'com.baulsupp'
          description "Command Line Output Library"
          url "https://github.com/yschimke/okurl"

          scm {
            connection 'scm:git:https://github.com/yschimke/okurl.git'
            developerConnection 'scm:git:git@github.com:yschimke/okurl.git'
            url 'https://github.com/yschimke/okurl.git'
          }

          licenses {
            license {
              name 'Apache License'
              url 'http://opensource.org/licenses/apache-2.0'
              distribution 'repo'
            }
          }

          developers {
            developer {
              id = 'yschimke'
              name = 'Yuri Schimke'
              email = 'yuri@schimke.ee'
            }
          }

          packaging 'jar'
        }
      }
    }
  }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = (selection.candidate.group == "io.netty" && selection.candidate.version ==~ /5\..*/) || (selection.candidate.group == "org.jetbrains.kotlin" && selection.candidate.version ==~ /.*dev.*/)
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

task resolveDependencies {
  setDescription "Resolves all projects dependencies from the repository."
  setGroup "Build Server"

  doLast {
    rootProject.allprojects { project ->
      project.buildscript.configurations.forEach { configuration ->
        if (configuration.canBeResolved) {
          configuration.resolve()
        }
      }

      project.configurations.forEach { configuration ->
        if (configuration.canBeResolved) {
          configuration.resolve()
        }
      }
    }
  }
}

test {
  useJUnitPlatform {
    excludeTags 'slow'
    includeEngines 'junit-jupiter', 'junit-vintage'
  }

  failFast = true
}

shadowJar {
  mergeServiceFiles()
}

// kotlinter {
//   ignoreFailures = true
//   indentSize = 2
//   continuationIndentSize = 4
//   reporters = ['plain']
// }
