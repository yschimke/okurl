object Versions {
  val bouncyCastle = "1.61"
  val braveVersion = "5.6.3"
  val conscrypt = "2.1.0"
  val jackson = "2.9.8"
  val jansi = "1.18"
  val jjwtVersion = "0.10.6"
  val junitVersion = "5.5.0-M1"
  val kotlin = "1.3.21"
  val kotlinCoroutines = "1.1.1"
  val moshiVersion = "1.8.0"
  val netty = "4.1.34.Final"
  val okcurl = "0.5.0"
  val okioVersion = "2.2.2"
  val okhttpVersion = "3.14.0"
  val oksocialOutputVersion = "4.26.0"
  val slf4jVersion = "1.8.0-beta4"
  val tink = "1.2.2"
  val unixSocket = "0.22"
  val zipkin = "2.10.1"
  val zipkinOkhttp = "2.8.2"
}

object Deps {
  val activation = "javax.activation:activation"
  val airline = "com.github.rvesse:airline"
  val bouncyCastle = "org.bouncycastle:bcprov-jdk15on"
  val brave = "io.zipkin.brave:brave"
  val braveInstrumentationOkhttp3 = "io.zipkin.brave:brave-instrumentation-okhttp3"
  val braveOkhttp3 = "io.zipkin.brave:brave-okhttp"
  val brotli = "org.brotli:dec"
  val byteunits = "com.jakewharton.byteunits:byteunits"
  val commonsIo = "commons-io:commons-io"
  val commonsLang = "org.apache.commons:commons-lang3"
  val conscryptUber = "org.conscrypt:conscrypt-openjdk-uber"
  val coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.kotlinCoroutines}"
  val coroutinesDebug = "org.jetbrains.kotlinx:kotlinx-coroutines-debug:${Versions.kotlinCoroutines}"
  val coroutinesJdk8 = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${Versions.kotlinCoroutines}"
  val jacksonCbor = "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor"
  val jacksonDatabind = "com.fasterxml.jackson.core:jackson-databind"
  val jacksonJdk8 = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
  val jacksonJsr310 = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
  val jacksonKotlin = "com.fasterxml.jackson.module:jackson-module-kotlin"
  val jacksonParams = "com.fasterxml.jackson.module:jackson-module-parameter-names"
  val jacksonYaml = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
  val jansi = "org.fusesource.jansi:jansi"
  val jffi = "com.github.jnr:jffi"
  val jjwt = "io.jsonwebtoken:jjwt-api"
  val jjwtImpl = "io.jsonwebtoken:jjwt-impl"
  val jjwtJackson = "io.jsonwebtoken:jjwt-jackson"
  val jkeychain = "pt.davidafsilva.apple:jkeychain"
  val jnrUnixSocket = "com.github.jnr:jnr-unixsocket"
  val jsr305 = "com.google.code.findbugs"
  val junitJupiterApi = "org.junit.jupiter:junit-jupiter-api"
  val junitJupiterEngine = "org.junit.jupiter:junit-jupiter-engine"
  val kotlinCompilerEmbeddable = "org.jetbrains.kotlin:kotlin-compiler-embeddable:${Versions.kotlin}"
  val kotlinReflect = "org.jetbrains.kotlin:kotlin-reflect:${Versions.kotlin}"
  val kotlinScriptUtil = "org.jetbrains.kotlin:kotlin-script-util:${Versions.kotlin}"
  val kotlinStandardLibrary = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlin}"
  val kotlinTest = "org.jetbrains.kotlin:kotlin-test:${Versions.kotlin}"
  val kotlinTestJunit = "org.jetbrains.kotlin:kotlin-test-junit:${Versions.kotlin}"
  val moshi = "com.squareup.moshi:moshi"
  val moshiAdapters = "com.squareup.moshi:moshi-adapters"
  val moshiKotlin = "com.squareup.moshi:moshi-kotlin"
  val nettyResolveDns = "io.netty:netty-resolver-dns"
  val ok2Curl = "com.github.mrmike:ok2curl"
  val okhttp = "com.squareup.okhttp3:okhttp"
  val okhttpDigest = "com.baulsupp:okhttp-digest"
  val okhttpDoh = "com.squareup.okhttp3:okhttp-dnsoverhttps"
  val okhttpLoggingInterceptor = "com.squareup.okhttp3:logging-interceptor"
  val okhttpMWS = "com.squareup.okhttp3:mockwebserver"
  val okhttpSse = "com.squareup.okhttp3:okhttp-sse"
  val okhttpTesting = "com.squareup.okhttp3:okhttp-testing-support"
  val okhttpTls = "com.squareup.okhttp3:okhttp-tls"
  val okhttpUDS = "com.squareup.okhttp3.sample:unixdomainsockets"
  val okio = "com.squareup.okio:okio"
  val oksocialOutput = "com.baulsupp:oksocial-output"
  val proxyVol = "com.github.markusbernhardt:proxy-vole"
  val slf4jApi = "org.slf4j:slf4j-api"
  val slf4jJdk14 = "org.slf4j:slf4j-jdk14"
  val tink = "com.google.crypto.tink:tink"
  val zipkin = "io.zipkin.java:zipkin"
  val zipkinSenderOkhttp3 = "io.zipkin.reporter2:zipkin-sender-okhttp3"
  val ztExec = "org.zeroturnaround:zt-exec"
}
