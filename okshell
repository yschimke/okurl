#!/bin/sh

export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)

codesha() {
  find pom.xml src/main -type f | sort | xargs shasum | shasum | cut -f 1 -d ' '
}

SHA=$(codesha)

if [ ! -f "target/cached-$SHA.jar" ]; then
  echo Building... >&1
  mvn -B -DskipTests clean package dependency:copy-dependencies >&2 || exit
  mv target/oksocial-*SNAPSHOT.jar "target/cached-$SHA.jar"
fi

BCP=

JAVA_HOME=$(/usr/libexec/java_home -v 9 2>/dev/null)

if [ $? -ne 0 ]; then
  JAVA_HOME=$(/usr/libexec/java_home -v 1.8)

  ALPN=$(ls target/alpn/alpn-boot-*.jar)
  BCP="-J-Xbootclasspath/p:$ALPN"
else
  VMOPTS="-J--add-opens=java.base/sun.net.dns=ALL-UNNAMED -J--add-opens=java.base/java.lang.reflect=ALL-UNNAMED -J--add-opens=java.base/java.nio=ALL-UNNAMED -J--add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
fi

CLASSPATH=$(JARS=(target/dependency/*.jar); IFS=:; echo "${JARS[*]}")

MAIN_JAR=$(ls "target/cached-$SHA.jar")

if [ -z "$1" ]; then
  input=-
else 
  input=$1
  shift
fi

$JAVA_HOME/bin/jjs -Dokhttp.platform=conscrypt $VMOPTS $BCP -classpath $MAIN_JAR:$CLASSPATH -scripting ./src/main/resources/oksocial.js $input -- "$@"
